/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export interface SupportedPaths {
  esm?: Array<string>
  dynEsm?: Array<string>
  cjs?: Array<string>
  css?: Array<string>
}
export interface SetupOptions {
  project: string
  projectRoot: string
  globEntries?: Array<string>
  entries?: Array<string>
  cacheDir?: string
  supportedPaths?: SupportedPaths
  debug?: boolean
}
export interface EntryChangeCause {
  file: string
  state: FileState
}
export interface EntryChange {
  changeType: EntryChangeType
  entry: string
  cause?: EntryChangeCause
  tree?: Array<string>
}
export const enum EntryChangeType {
  Added = 'Added',
  DepAdded = 'DepAdded',
  Modified = 'Modified',
  DepModified = 'DepModified',
  Deleted = 'Deleted',
  DepDeleted = 'DepDeleted'
}
export const enum FileState {
  NotModified = 'NotModified',
  Modified = 'Modified',
  Created = 'Created',
  Deleted = 'Deleted'
}
export type Watcher = ModulesWatcher
export class ModulesWatcher {
  static setup(opts: SetupOptions): Watcher
  cacheDir(): string
  getEntries(): Array<FileItem>
  makeChanges(): Array<EntryChange>
  getDirsToWatch(): Array<string>
  stopWatching(): void
  watch(callback: (err: null | Error, result: EntryChange[]) => void): void
}
