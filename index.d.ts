/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export class ExternalObject<T> {
  readonly '': {
    readonly '': unique symbol
    [K: symbol]: T
  }
}
export interface NapiFileItem {
  path: string
  deps: Array<string>
}
export interface SupportedPaths {
  esm?: Array<string> | undefined | null
  dynEsm?: Array<string> | undefined | null
  cjs?: Array<string> | undefined | null
  css?: Array<string> | undefined | null
}
export interface SetupOptions {
  project: string
  projectRoot: string
  globEntries?: Array<string> | undefined | null
  entries?: Array<string> | undefined | null
  cacheDir?: string | undefined | null
  supportedPaths?: SupportedPaths | undefined | null
}
export interface EntryChange {
  changeType: string
  entry: string
  tree?: Array<string> | undefined | null
}
export type Watcher = ModulesWatcher
export class ModulesWatcher {
  setupOptions: SetupOptions
  processed: boolean
  cacheDir: string
  static setup(opts: SetupOptions): Watcher
  getEntries(): Array<NapiFileItem>
  makeChanges(): Array<EntryChange>
  getDirsToWatch(): Array<string>
  stopWatching(): void
  watch(retrieveItem: boolean, callback: (err: null | Error, result: null | NapiFileItem[]) => void): void
}
